<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>Well</groupId>
  <artifactId>DvrMgr</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>DvrMgr Maven Webapp</name>
  <url>http://maven.apache.org</url>

<repositories>
    <repository>
        <id>people.apache.snapshots</id>
        <url>http://repository.apache.org/content/groups/snapshots-group/</url>
        <releases>
            <enabled>false</enabled>
        </releases>
        <snapshots>
            <enabled>true</enabled>
        </snapshots>
    </repository>
</repositories>

<pluginRepositories>
    <pluginRepository>
        <id>apache.snapshots</id>
        <name>Apache Snapshots</name>
        <url>http://repository.apache.org/content/groups/snapshots-group/</url>
        <releases>
            <enabled>false</enabled>
        </releases>
        <snapshots>
            <enabled>true</enabled>
        </snapshots>
    </pluginRepository>
</pluginRepositories>


<properties>
    <spring.version>4.0.2.RELEASE</spring.version>
    <hibernate.version>4.2.2.Final</hibernate.version>
    <log4j.version>1.2.17</log4j.version>
    <junit.version>4.10</junit.version>
    <oracle.version>10.2.0.2.0</oracle.version>
    <tomcat.version>8.0.0-RC5</tomcat.version>
    <beanutils.version>1.9.2</beanutils.version>
</properties>

  <dependencies>
      <dependency>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
          <version>${junit.version}</version>
          <scope>test</scope>
      </dependency>

      <!-- log4j的依赖 -->
      <dependency>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
          <version>${log4j.version}</version>
      </dependency>

      <dependency>
          <groupId>javax.servlet</groupId>
          <artifactId>servlet-api</artifactId>
          <version>2.5</version>
      </dependency>

      <!-- ojdbc -->
      <dependency>
          <groupId>com.oracle</groupId>
          <artifactId>ojdbc14</artifactId>
          <version>${oracle.version}</version>
      </dependency>

      <!-- beanutils -->
      <dependency>
          <groupId>commons-beanutils</groupId>
          <artifactId>commons-beanutils</artifactId>
          <version>${beanutils.version}</version>
      </dependency>


      <!-- spring -->
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-core</artifactId>
          <version>${spring.version}</version>
      </dependency>
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-beans</artifactId>
          <version>${spring.version}</version>
      </dependency>
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-context</artifactId>
          <version>${spring.version}</version>
      </dependency>
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-web</artifactId>
          <version>${spring.version}</version>
      </dependency>
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-webmvc</artifactId>
          <version>${spring.version}</version>
      </dependency>
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-tx</artifactId>
          <version>${spring.version}</version>
      </dependency>
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-jdbc</artifactId>
          <version>${spring.version}</version>
      </dependency>
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-orm</artifactId>
          <version>${spring.version}</version>
      </dependency>
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-expression</artifactId>
          <version>${spring.version}</version>
      </dependency>
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-aop</artifactId>
          <version>${spring.version}</version>
      </dependency>
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-test</artifactId>
          <version>${spring.version}</version>
      </dependency>


      <!-- hibernate -->
      <dependency>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate-core</artifactId>
          <version>${hibernate.version}</version>
      </dependency>
      <dependency>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate-c3p0</artifactId>
          <version>${hibernate.version}</version>
      </dependency>
      <dependency>
          <groupId>c3p0</groupId>
          <artifactId>c3p0</artifactId>
          <version>0.9.0.2</version>
      </dependency>
      <dependency>
          <groupId>c3p0</groupId>
          <artifactId>c3p0-oracle-thin-extras</artifactId>
          <version>0.9.0.2</version>
      </dependency>
  </dependencies>
  <build>
    <finalName>DvrMgr</finalName>
      <plugins>
          <!-- 编译操作的定义 -->
          <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-compiler-plugin</artifactId>
              <version>2.3.2</version>
              <configuration>
                  <source>1.8</source>
                  <target>1.8</target>
              </configuration>
          </plugin>

          <!-- maven的打包部署与debug行为描述 -->
          <plugin>
              <artifactId>maven-war-plugin</artifactId>
              <version>2.1.1</version>
              <configuration>
                  <!-- 有这个定义，调试时不会进入target目录下，就不用总去重启服务，尤其在页面调试的时候很方便 -->
                  <webappDirectory>${basedir}/src/main/webapp</webappDirectory>
                  <warSourceDirectory>${basedir}/src/main/webapp</warSourceDirectory>
              </configuration>
          </plugin>

          <!--maven-surefire-plugin支持JUnit和TestNG-->
          <!--默认情况下，maven-surefire-plugin的test目标会自动执行测试源码-->
          <!--路径下所有以Test开头、Test或TestCase结尾的的Java类。-->
          <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-surefire-plugin</artifactId>
              <version>2.7.1</version>
              <configuration>
                  <!--这里选择跳过测试 -->
                  <skipTests>true</skipTests>
              </configuration>
          </plugin>

          <!--Maven Clean 操作-->
          <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-clean-plugin</artifactId>
              <version>2.4.1</version>
              <configuration>
                  <filesets>
                      <fileset>
                          <directory>${basedir}/src/main/webapp/WEB-INF</directory>
                          <excludes>
                              <!-- 排除哪些内容不清除  -->
                              <excluse>**/web.xml</excluse>
                          </excludes>
                      </fileset>
                  </filesets>
              </configuration>
          </plugin>

          <!-- maven部到tomcat
          <plugin>
              <groupId>org.apache.tomcat.maven</groupId>
              <artifactId>tomcat7-maven-plugin</artifactId>
              <version>2.2</version>
              <configuration>
                  <url>http://localhost:8080/manager/text</url>
                  <server>tomcat</server>
                  <path>/DvrMgr</path>
                  <port>8080</port>
                  <uriEncoding>UTF-8</uriEncoding>
              </configuration>
          </plugin>
          -->
      </plugins>

      <pluginManagement>
          <plugins>
              <plugin>
                  <groupId>org.apache.tomcat.maven</groupId>
                  <artifactId>tomcat7-maven-plugin</artifactId>
                  <version>2.2</version>
                  <executions>
                      <execution>
                          <id>tomcat-run</id>
                          <goals>
                              <goal>exec-war-only</goal>
                          </goals>
                          <phase>package</phase>
                          <configuration>
                              <warRunDependencies>
                                  <warRunDependency>
                                      <dependency>
                                          <groupId>DvrMgr</groupId>
                                          <artifactId>DvrMgr</artifactId>
                                          <version>1.0-SNAPSHOT</version>
                                          <type>war</type>
                                      </dependency>
                                      <contextPath>true</contextPath>
                                  </warRunDependency>
                              </warRunDependencies>
                              <enableNaming>true</enableNaming>
                          </configuration>
                      </execution>
                  </executions>
                  <configuration>
                      <url>http://localhost:8080/manager/text</url>
                      <server>tomcat</server>
                      <path>/DvrMgr</path>
                      <port>8080</port>
                      <uriEncoding>UTF-8</uriEncoding>
                  </configuration>
              </plugin>
          </plugins>
      </pluginManagement>
  </build>
</project>
